/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("KEY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KEY[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "KEY";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "KEY";
}

SIGNAL("LEDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("SW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("meemoo:tst|present_state.active")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("meemoo:tst|present_state.idle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("meemoo:tst|present_state.init")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

TRANSITION_LIST("KEY[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 940.0;
	}
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.194;
		LEVEL 1 FOR 3.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.467;
			LEVEL 1 FOR 3.199;
		}
		LEVEL 0 FOR 1.275;
		LEVEL 1 FOR 1.484;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 1.051;
		LEVEL 0 FOR 2.299;
		LEVEL 1 FOR 5.9;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.1;
			LEVEL 1 FOR 5.9;
		}
		LEVEL 0 FOR 1.801;
		LEVEL 1 FOR 0.716;
		LEVEL 0 FOR 13.4;
		LEVEL 1 FOR 5.884;
		LEVEL 0 FOR 2.915;
		LEVEL 1 FOR 10.8;
		LEVEL 0 FOR 6.285;
		LEVEL 1 FOR 0.809;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 3.645;
		LEVEL 0 FOR 9.8;
		LEVEL 1 FOR 12.131;
		LEVEL 0 FOR 4.8;
		LEVEL 1 FOR 2.915;
		LEVEL 0 FOR 10.889;
		LEVEL 1 FOR 6.4;
		LEVEL 0 FOR 3.471;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 16.835;
		LEVEL 1 FOR 7.4;
		LEVEL 0 FOR 1.805;
		LEVEL 1 FOR 4.319;
		LEVEL 0 FOR 13.2;
		LEVEL 1 FOR 6.191;
		LEVEL 0 FOR 12.4;
		LEVEL 1 FOR 5.114;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.818;
		LEVEL 0 FOR 1.867;
		LEVEL 1 FOR 1.466;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.867;
			LEVEL 1 FOR 1.466;
		}
		LEVEL 0 FOR 1.867;
		LEVEL 1 FOR 3.607;
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 3.266;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.4;
			LEVEL 1 FOR 3.266;
		}
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 0.586;
		LEVEL 0 FOR 3.503;
		LEVEL 1 FOR 3.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.3;
			LEVEL 1 FOR 3.7;
		}
		LEVEL 0 FOR 2.797;
		LEVEL 1 FOR 3.595;
		LEVEL 0 FOR 4.6;
		LEVEL 1 FOR 3.638;
		LEVEL 0 FOR 3.667;
		LEVEL 1 FOR 2.999;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.667;
			LEVEL 1 FOR 2.999;
		}
		LEVEL 0 FOR 3.667;
		LEVEL 1 FOR 5.287;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 5.925;
		LEVEL 0 FOR 8.4;
		LEVEL 1 FOR 6.056;
		LEVEL 0 FOR 11.36;
		LEVEL 1 FOR 7.2;
		LEVEL 0 FOR 2.045;
		LEVEL 1 FOR 2.866;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.8;
			LEVEL 1 FOR 2.866;
		}
		LEVEL 0 FOR 3.197;
		LEVEL 1 FOR 1.929;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.65;
			LEVEL 1 FOR 2.35;
		}
		LEVEL 0 FOR 2.65;
		LEVEL 1 FOR 1.188;
		LEVEL 0 FOR 6.1;
		LEVEL 1 FOR 3.133;
		LEVEL 0 FOR 4.233;
		LEVEL 1 FOR 7.2;
		LEVEL 0 FOR 9.899;
		LEVEL 1 FOR 1.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.734;
			LEVEL 1 FOR 1.599;
		}
		LEVEL 0 FOR 0.881;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 11.522;
		LEVEL 1 FOR 6.65;
		LEVEL 0 FOR 10.6;
		LEVEL 1 FOR 2.75;
		LEVEL 0 FOR 1.184;
		LEVEL 1 FOR 1.033;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.3;
			LEVEL 1 FOR 1.033;
		}
		LEVEL 0 FOR 5.224;
		LEVEL 1 FOR 7.6;
		LEVEL 0 FOR 8.293;
		LEVEL 1 FOR 3.666;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 7.445;
		LEVEL 0 FOR 3.933;
		LEVEL 1 FOR 2.733;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.933;
			LEVEL 1 FOR 2.733;
		}
		LEVEL 0 FOR 3.933;
		LEVEL 1 FOR 1.624;
		LEVEL 0 FOR 1.196;
		LEVEL 1 FOR 1.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 1.8;
		}
		LEVEL 0 FOR 3.275;
		LEVEL 1 FOR 1.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 3.667;
		LEVEL 1 FOR 2.599;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 0.932;
		LEVEL 1 FOR 5.85;
		LEVEL 0 FOR 10.6;
		LEVEL 1 FOR 3.55;
		LEVEL 0 FOR 2.007;
		LEVEL 1 FOR 2.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.333;
			LEVEL 1 FOR 2.333;
		}
		LEVEL 0 FOR 2.681;
		LEVEL 1 FOR 4.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.6;
			LEVEL 1 FOR 4.4;
		}
		LEVEL 0 FOR 5.247;
		LEVEL 1 FOR 0.372;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.467;
			LEVEL 1 FOR 1.866;
		}
		LEVEL 0 FOR 1.467;
		LEVEL 1 FOR 3.09;
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 1.6;
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 5.425;
		LEVEL 0 FOR 11.2;
		LEVEL 1 FOR 3.38;
		LEVEL 0 FOR 4.329;
		LEVEL 1 FOR 4.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.2;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.374;
		LEVEL 1 FOR 3.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.4;
			LEVEL 1 FOR 3.6;
		}
		LEVEL 0 FOR 8.067;
		LEVEL 1 FOR 3.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.2;
			LEVEL 1 FOR 3.8;
		}
		LEVEL 0 FOR 0.414;
		LEVEL 1 FOR 2.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.2;
			LEVEL 1 FOR 2.8;
		}
		LEVEL 0 FOR 1.816;
		LEVEL 1 FOR 0.696;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.55;
			LEVEL 1 FOR 2.45;
		}
		LEVEL 0 FOR 2.55;
		LEVEL 1 FOR 1.754;
		LEVEL 0 FOR 2.363;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 3.237;
		LEVEL 1 FOR 1.433;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.9;
			LEVEL 1 FOR 3.1;
		}
		LEVEL 0 FOR 6.9;
		LEVEL 1 FOR 5.282;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 1.599;
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 1.233;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.1;
			LEVEL 1 FOR 1.233;
		}
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 1.933;
		LEVEL 0 FOR 1.634;
		LEVEL 1 FOR 1.699;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.634;
			LEVEL 1 FOR 1.699;
		}
		LEVEL 0 FOR 1.634;
		LEVEL 1 FOR 0.587;
		LEVEL 0 FOR 2.207;
		LEVEL 1 FOR 2.25;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.75;
			LEVEL 1 FOR 2.25;
		}
		LEVEL 0 FOR 0.543;
		LEVEL 1 FOR 3.089;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.2;
			LEVEL 1 FOR 3.8;
		}
		LEVEL 0 FOR 6.2;
		LEVEL 1 FOR 1.368;
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 1.733;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.6;
			LEVEL 1 FOR 1.733;
		}
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 1.077;
		LEVEL 0 FOR 0.179;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.821;
		LEVEL 1 FOR 2.307;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 4.9;
		}
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 3.936;
		LEVEL 0 FOR 2.45;
		LEVEL 1 FOR 2.55;
		LEVEL 0 FOR 2.45;
		LEVEL 1 FOR 2.163;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 3.344;
		LEVEL 0 FOR 2.956;
		LEVEL 1 FOR 1.75;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.25;
			LEVEL 1 FOR 1.75;
		}
		LEVEL 0 FOR 2.818;
		LEVEL 1 FOR 4.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.3;
			LEVEL 1 FOR 4.7;
		}
		LEVEL 0 FOR 2.776;
		LEVEL 1 FOR 2.266;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.416;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.318;
	}
}

TRANSITION_LIST("LEDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 970.0;
	}
}

TRANSITION_LIST("LEDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 18.949;
		LEVEL 0 FOR 961.051;
	}
}

TRANSITION_LIST("SW[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 970.0;
	}
}

TRANSITION_LIST("SW[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 940.0;
	}
}

TRANSITION_LIST("meemoo:tst|present_state.active")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32.283;
		LEVEL 1 FOR 6.666;
		LEVEL 0 FOR 961.051;
	}
}

TRANSITION_LIST("meemoo:tst|present_state.idle")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18.949;
		LEVEL 1 FOR 961.051;
	}
}

TRANSITION_LIST("meemoo:tst|present_state.init")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 12.283;
		LEVEL 0 FOR 967.717;
	}
}

DISPLAY_LINE
{
	CHANNEL = "KEY";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SW";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "SW[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "SW[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "meemoo:tst|present_state.active";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "meemoo:tst|present_state.idle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "meemoo:tst|present_state.init";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
