|code_lock_tester
SW[0] => code_lock_simple:clt.code[0]
SW[1] => code_lock_simple:clt.code[1]
SW[2] => code_lock_simple:clt.code[2]
SW[3] => code_lock_simple:clt.code[3]
KEY[0] => code_lock_simple:clt.enter
KEY[1] => code_lock_simple:clt.reset
CLOCK_50 => code_lock_simple:clt.clk
LEDG[0] <= code_lock_simple:clt.lock
LEDG[1] <= <GND>


|code_lock_tester|code_lock_simple:clt
clk => synch:synchronizer.clk
clk => code_lock_simple_fsm:code_lock_fsm.clk
reset => code_lock_simple_fsm:code_lock_fsm.reset
code[0] => code_lock_simple_fsm:code_lock_fsm.code[0]
code[1] => code_lock_simple_fsm:code_lock_fsm.code[1]
code[2] => code_lock_simple_fsm:code_lock_fsm.code[2]
code[3] => code_lock_simple_fsm:code_lock_fsm.code[3]
enter => synch:synchronizer.async_sig
lock <= code_lock_simple_fsm:code_lock_fsm.lock


|code_lock_tester|code_lock_simple:clt|synch:synchronizer
async_sig => \sync1:resync[1].DATAIN
clk => synced~reg0.CLK
clk => rise~reg0.CLK
clk => fall~reg0.CLK
clk => \sync1:resync[3].CLK
clk => \sync1:resync[2].CLK
clk => \sync1:resync[1].CLK
rise <= rise~reg0.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall~reg0.DB_MAX_OUTPUT_PORT_TYPE
synced <= synced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|code_lock_tester|code_lock_simple:clt|code_lock_simple_fsm:code_lock_fsm
clk => present_state~1.DATAIN
reset => present_state~3.DATAIN
enter => Selector0.IN5
enter => Selector1.IN3
enter => Selector2.IN3
enter => Selector0.IN4
enter => next_state.ev_code1.DATAB
enter => next_state.ev_code2.DATAB
code[0] => Equal0.IN3
code[0] => Equal1.IN3
code[1] => Equal0.IN2
code[1] => Equal1.IN2
code[2] => Equal0.IN1
code[2] => Equal1.IN1
code[3] => Equal0.IN0
code[3] => Equal1.IN0
code1[0] => Equal0.IN7
code1[1] => Equal0.IN6
code1[2] => Equal0.IN5
code1[3] => Equal0.IN4
code2[0] => Equal1.IN7
code2[1] => Equal1.IN6
code2[2] => Equal1.IN5
code2[3] => Equal1.IN4
lock <= lock.DB_MAX_OUTPUT_PORT_TYPE


