vendor_name = ModelSim
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/wrong_code.vhd
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/synch.vhd
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/code_lock_tester.vhd
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/code_lock_simple_fsm.vhd
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/output_files/func_sim_code_lock.vwf
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/output_files/func_sim_wrong_code1.vwf
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/code_lock.vhd
source_file = 1, C:/Users/tobia/OneDrive/Dokumenter/GitHub/DSD/Exercise_7/db/Exercise_7.cbx.xml
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = code_lock_tester
instance = comp, \clt|code_lock_fsm|Equal1~0 , clt|code_lock_fsm|Equal1~0, code_lock_tester, 1
instance = comp, \SW[1]~I , SW[1], code_lock_tester, 1
instance = comp, \KEY[1]~I , KEY[1], code_lock_tester, 1
instance = comp, \CLOCK_50~I , CLOCK_50, code_lock_tester, 1
instance = comp, \CLOCK_50~clkctrl , CLOCK_50~clkctrl, code_lock_tester, 1
instance = comp, \KEY[0]~I , KEY[0], code_lock_tester, 1
instance = comp, \clt|synchronizer|sync1:resync[1]~0 , clt|synchronizer|\sync1:resync[1]~0, code_lock_tester, 1
instance = comp, \clt|synchronizer|sync1:resync[1] , clt|synchronizer|\sync1:resync[1], code_lock_tester, 1
instance = comp, \clt|synchronizer|sync1:resync[2] , clt|synchronizer|\sync1:resync[2], code_lock_tester, 1
instance = comp, \clt|synchronizer|sync1:resync[3] , clt|synchronizer|\sync1:resync[3], code_lock_tester, 1
instance = comp, \clt|synchronizer|rise~0 , clt|synchronizer|rise~0, code_lock_tester, 1
instance = comp, \clt|synchronizer|rise , clt|synchronizer|rise, code_lock_tester, 1
instance = comp, \SW[3]~I , SW[3], code_lock_tester, 1
instance = comp, \SW[0]~I , SW[0], code_lock_tester, 1
instance = comp, \SW[2]~I , SW[2], code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Equal0~0 , clt|code_lock_fsm|Equal0~0, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Selector2~0 , clt|code_lock_fsm|Selector2~0, code_lock_tester, 1
instance = comp, \KEY[1]~clk_delay_ctrl , KEY[1]~clk_delay_ctrl, code_lock_tester, 1
instance = comp, \KEY[1]~clkctrl , KEY[1]~clkctrl, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|state.get_code2 , clt|code_lock_fsm|state.get_code2, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Selector3~0 , clt|code_lock_fsm|Selector3~0, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|state.ev_code2 , clt|code_lock_fsm|state.ev_code2, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Selector4~0 , clt|code_lock_fsm|Selector4~0, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|state.unlocked , clt|code_lock_fsm|state.unlocked, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_0~feeder , clt|wrong_code|state.err_0~feeder, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Selector5~0 , clt|code_lock_fsm|Selector5~0, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|state.wrong_code , clt|code_lock_fsm|state.wrong_code, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Selector0~0 , clt|code_lock_fsm|Selector0~0, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Selector0~1 , clt|code_lock_fsm|Selector0~1, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|state.idle , clt|code_lock_fsm|state.idle, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|Selector1~0 , clt|code_lock_fsm|Selector1~0, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|state.ev_code1 , clt|code_lock_fsm|state.ev_code1, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|err_event~0 , clt|code_lock_fsm|err_event~0, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|err_event~1 , clt|code_lock_fsm|err_event~1, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|err_event~2 , clt|code_lock_fsm|err_event~2, code_lock_tester, 1
instance = comp, \clt|code_lock_fsm|err_event , clt|code_lock_fsm|err_event, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_0 , clt|wrong_code|state.err_0, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_1~0 , clt|wrong_code|state.err_1~0, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_1 , clt|wrong_code|state.err_1, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_2~feeder , clt|wrong_code|state.err_2~feeder, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_2 , clt|wrong_code|state.err_2, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_3~0 , clt|wrong_code|state.err_3~0, code_lock_tester, 1
instance = comp, \clt|wrong_code|state.err_3 , clt|wrong_code|state.err_3, code_lock_tester, 1
instance = comp, \LEDG[0]~I , LEDG[0], code_lock_tester, 1
instance = comp, \LEDG[1]~I , LEDG[1], code_lock_tester, 1
instance = comp, \LEDG[2]~I , LEDG[2], code_lock_tester, 1
