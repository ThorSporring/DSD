

entity mux is
    port(
        show: in std_logic;
        set: in std_logic;
        input: in std_logic_vector(7 downto 0);
		  try: in std_logic;
		  player: in std_logic;
        show1: out std_logic;
		  set1: out std_logic;
		  mux_out1: out std_logic_vector(7 downto 0);
		  try1: out std_logic;
		  show2: out std_logic;
		  set2: out std_logic;
		  mux_out2: out std_logic_vector(7 downto 0);
		  try2: out std_logic;
		  player1_hex: in std_logic_vector(13 downto 0);
		  player2_hex: in std_logic_vector(13 downto 0);
		  hex_out: out std_logic_vector (13 downto 0)
		  );
end mux;

architecture mux_impl of mux is
	begin
	mux_if1: process(show,set,input,try,player)
    begin
        if player = '0' then
           show1 <= show;
			  set1 <= set;
			  mux_out1 <= input;
			  try1 <= try;
        else
            show2 <= show;
				set2 <= set;
				mux_out2 <= input;
				try2 <= try;
        end if;
	end process mux_if1;
	mux_if2: process(player1_hex,player2_hex)
		begin
			if player = '0' then
				hex_out <= player1_hex;
			else
				hex_put <= player2_hex;
			end if;
		end process mux_if2;
end mux_impl;